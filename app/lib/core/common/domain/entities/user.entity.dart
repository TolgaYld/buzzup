import 'package:buzzup/core/common/domain/entities/channel.entity.dart';
import 'package:buzzup/core/common/domain/entities/comment.entity.dart';
import 'package:buzzup/core/common/domain/entities/content.entity.dart';
import 'package:buzzup/core/common/domain/entities/location.entity.dart';
import 'package:buzzup/core/common/domain/entities/report.entity.dart';
import 'package:buzzup/core/enums/user_type.dart';
import 'package:dart_mappable/dart_mappable.dart';

part 'user.entity.mapper.dart';

@MappableClass()
class UserEntity with UserEntityMappable {
  UserEntity({
    required this.id,
    required this.username,
    required this.email,
    required this.isBanned,
    required this.isDeleted,
    required this.userType,
    required this.official,
    required this.distance,
    required this.points,
    required this.location,
    required this.provider,
    required this.createdAt,
    required this.autoGeneratedUsername,
    required this.usernameChangeCounter,
    this.channels,
    this.deviceType,
    this.deviceId,
    this.providerId,
    this.posts,
    this.storys,
    this.comments,
    this.reports,
    this.reporteds,
  });

  factory UserEntity.empty() => UserEntity(
        id: 'empty',
        username: 'empty',
        email: 'test123@test.com',
        userType: UserType.user,
        isBanned: false,
        isDeleted: false,
        official: false,
        distance: 9000,
        points: 0,
        location: LocationEntity.empty(),
        createdAt: DateTime.parse('2024-02-10T14:38:36.936Z'),
        autoGeneratedUsername: false,
        usernameChangeCounter: 0,
        provider: "local",
      );

  final String id;
  final String? username;
  final String? email;
  final bool? isBanned;
  final bool? isDeleted;
  final UserType userType;
  final bool? official;
  final int? distance;
  final int? points;
  final LocationEntity? location;
  final String? provider;
  final DateTime? createdAt;
  final bool? autoGeneratedUsername;
  final int? usernameChangeCounter;
  final List<ChannelEntity>? channels;
  final String? deviceType;
  final String? deviceId;
  final String? providerId;
  final List<PostEntity>? posts;
  final List<StoryEntity>? storys;
  final List<CommentEntity>? comments;
  final List<ReportEntity>? reports;
  final List<ReportEntity>? reporteds;
}
