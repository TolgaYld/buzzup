// coverage:ignore-file
// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint
// ignore_for_file: unused_element, unnecessary_cast, override_on_non_overriding_member
// ignore_for_file: strict_raw_type, inference_failure_on_untyped_parameter

part of 'user.entity.dart';

class UserEntityMapper extends ClassMapperBase<UserEntity> {
  UserEntityMapper._();

  static UserEntityMapper? _instance;
  static UserEntityMapper ensureInitialized() {
    if (_instance == null) {
      MapperContainer.globals.use(_instance = UserEntityMapper._());
      UserTypeMapper.ensureInitialized();
      LocationEntityMapper.ensureInitialized();
      ChannelEntityMapper.ensureInitialized();
      PostEntityMapper.ensureInitialized();
      StoryEntityMapper.ensureInitialized();
      CommentEntityMapper.ensureInitialized();
      ReportEntityMapper.ensureInitialized();
    }
    return _instance!;
  }

  @override
  final String id = 'UserEntity';

  static String _$id(UserEntity v) => v.id;
  static const Field<UserEntity, String> _f$id = Field('id', _$id);
  static String? _$username(UserEntity v) => v.username;
  static const Field<UserEntity, String> _f$username =
      Field('username', _$username);
  static String? _$email(UserEntity v) => v.email;
  static const Field<UserEntity, String> _f$email = Field('email', _$email);
  static bool? _$isBanned(UserEntity v) => v.isBanned;
  static const Field<UserEntity, bool> _f$isBanned =
      Field('isBanned', _$isBanned);
  static bool? _$isDeleted(UserEntity v) => v.isDeleted;
  static const Field<UserEntity, bool> _f$isDeleted =
      Field('isDeleted', _$isDeleted);
  static UserType _$userType(UserEntity v) => v.userType;
  static const Field<UserEntity, UserType> _f$userType =
      Field('userType', _$userType);
  static bool? _$official(UserEntity v) => v.official;
  static const Field<UserEntity, bool> _f$official =
      Field('official', _$official);
  static int? _$distance(UserEntity v) => v.distance;
  static const Field<UserEntity, int> _f$distance =
      Field('distance', _$distance);
  static int? _$points(UserEntity v) => v.points;
  static const Field<UserEntity, int> _f$points = Field('points', _$points);
  static LocationEntity? _$location(UserEntity v) => v.location;
  static const Field<UserEntity, LocationEntity> _f$location =
      Field('location', _$location);
  static String? _$provider(UserEntity v) => v.provider;
  static const Field<UserEntity, String> _f$provider =
      Field('provider', _$provider);
  static DateTime? _$createdAt(UserEntity v) => v.createdAt;
  static const Field<UserEntity, DateTime> _f$createdAt =
      Field('createdAt', _$createdAt);
  static bool? _$autoGeneratedUsername(UserEntity v) => v.autoGeneratedUsername;
  static const Field<UserEntity, bool> _f$autoGeneratedUsername =
      Field('autoGeneratedUsername', _$autoGeneratedUsername);
  static int? _$usernameChangeCounter(UserEntity v) => v.usernameChangeCounter;
  static const Field<UserEntity, int> _f$usernameChangeCounter =
      Field('usernameChangeCounter', _$usernameChangeCounter);
  static List<ChannelEntity>? _$channels(UserEntity v) => v.channels;
  static const Field<UserEntity, List<ChannelEntity>> _f$channels =
      Field('channels', _$channels, opt: true);
  static String? _$deviceType(UserEntity v) => v.deviceType;
  static const Field<UserEntity, String> _f$deviceType =
      Field('deviceType', _$deviceType, opt: true);
  static String? _$deviceId(UserEntity v) => v.deviceId;
  static const Field<UserEntity, String> _f$deviceId =
      Field('deviceId', _$deviceId, opt: true);
  static String? _$providerId(UserEntity v) => v.providerId;
  static const Field<UserEntity, String> _f$providerId =
      Field('providerId', _$providerId, opt: true);
  static List<PostEntity>? _$posts(UserEntity v) => v.posts;
  static const Field<UserEntity, List<PostEntity>> _f$posts =
      Field('posts', _$posts, opt: true);
  static List<StoryEntity>? _$storys(UserEntity v) => v.storys;
  static const Field<UserEntity, List<StoryEntity>> _f$storys =
      Field('storys', _$storys, opt: true);
  static List<CommentEntity>? _$comments(UserEntity v) => v.comments;
  static const Field<UserEntity, List<CommentEntity>> _f$comments =
      Field('comments', _$comments, opt: true);
  static List<ReportEntity>? _$reports(UserEntity v) => v.reports;
  static const Field<UserEntity, List<ReportEntity>> _f$reports =
      Field('reports', _$reports, opt: true);
  static List<ReportEntity>? _$reporteds(UserEntity v) => v.reporteds;
  static const Field<UserEntity, List<ReportEntity>> _f$reporteds =
      Field('reporteds', _$reporteds, opt: true);

  @override
  final MappableFields<UserEntity> fields = const {
    #id: _f$id,
    #username: _f$username,
    #email: _f$email,
    #isBanned: _f$isBanned,
    #isDeleted: _f$isDeleted,
    #userType: _f$userType,
    #official: _f$official,
    #distance: _f$distance,
    #points: _f$points,
    #location: _f$location,
    #provider: _f$provider,
    #createdAt: _f$createdAt,
    #autoGeneratedUsername: _f$autoGeneratedUsername,
    #usernameChangeCounter: _f$usernameChangeCounter,
    #channels: _f$channels,
    #deviceType: _f$deviceType,
    #deviceId: _f$deviceId,
    #providerId: _f$providerId,
    #posts: _f$posts,
    #storys: _f$storys,
    #comments: _f$comments,
    #reports: _f$reports,
    #reporteds: _f$reporteds,
  };

  static UserEntity _instantiate(DecodingData data) {
    return UserEntity(
        id: data.dec(_f$id),
        username: data.dec(_f$username),
        email: data.dec(_f$email),
        isBanned: data.dec(_f$isBanned),
        isDeleted: data.dec(_f$isDeleted),
        userType: data.dec(_f$userType),
        official: data.dec(_f$official),
        distance: data.dec(_f$distance),
        points: data.dec(_f$points),
        location: data.dec(_f$location),
        provider: data.dec(_f$provider),
        createdAt: data.dec(_f$createdAt),
        autoGeneratedUsername: data.dec(_f$autoGeneratedUsername),
        usernameChangeCounter: data.dec(_f$usernameChangeCounter),
        channels: data.dec(_f$channels),
        deviceType: data.dec(_f$deviceType),
        deviceId: data.dec(_f$deviceId),
        providerId: data.dec(_f$providerId),
        posts: data.dec(_f$posts),
        storys: data.dec(_f$storys),
        comments: data.dec(_f$comments),
        reports: data.dec(_f$reports),
        reporteds: data.dec(_f$reporteds));
  }

  @override
  final Function instantiate = _instantiate;

  static UserEntity fromMap(Map<String, dynamic> map) {
    return ensureInitialized().decodeMap<UserEntity>(map);
  }

  static UserEntity fromJson(String json) {
    return ensureInitialized().decodeJson<UserEntity>(json);
  }
}

mixin UserEntityMappable {
  String toJson() {
    return UserEntityMapper.ensureInitialized()
        .encodeJson<UserEntity>(this as UserEntity);
  }

  Map<String, dynamic> toMap() {
    return UserEntityMapper.ensureInitialized()
        .encodeMap<UserEntity>(this as UserEntity);
  }

  UserEntityCopyWith<UserEntity, UserEntity, UserEntity> get copyWith =>
      _UserEntityCopyWithImpl(this as UserEntity, $identity, $identity);
  @override
  String toString() {
    return UserEntityMapper.ensureInitialized()
        .stringifyValue(this as UserEntity);
  }

  @override
  bool operator ==(Object other) {
    return UserEntityMapper.ensureInitialized()
        .equalsValue(this as UserEntity, other);
  }

  @override
  int get hashCode {
    return UserEntityMapper.ensureInitialized().hashValue(this as UserEntity);
  }
}

extension UserEntityValueCopy<$R, $Out>
    on ObjectCopyWith<$R, UserEntity, $Out> {
  UserEntityCopyWith<$R, UserEntity, $Out> get $asUserEntity =>
      $base.as((v, t, t2) => _UserEntityCopyWithImpl(v, t, t2));
}

abstract class UserEntityCopyWith<$R, $In extends UserEntity, $Out>
    implements ClassCopyWith<$R, $In, $Out> {
  LocationEntityCopyWith<$R, LocationEntity, LocationEntity>? get location;
  ListCopyWith<$R, ChannelEntity,
      ChannelEntityCopyWith<$R, ChannelEntity, ChannelEntity>>? get channels;
  ListCopyWith<$R, PostEntity, PostEntityCopyWith<$R, PostEntity, PostEntity>>?
      get posts;
  ListCopyWith<$R, StoryEntity,
      StoryEntityCopyWith<$R, StoryEntity, StoryEntity>>? get storys;
  ListCopyWith<$R, CommentEntity,
      CommentEntityCopyWith<$R, CommentEntity, CommentEntity>>? get comments;
  ListCopyWith<$R, ReportEntity,
      ReportEntityCopyWith<$R, ReportEntity, ReportEntity>>? get reports;
  ListCopyWith<$R, ReportEntity,
      ReportEntityCopyWith<$R, ReportEntity, ReportEntity>>? get reporteds;
  $R call(
      {String? id,
      String? username,
      String? email,
      bool? isBanned,
      bool? isDeleted,
      UserType? userType,
      bool? official,
      int? distance,
      int? points,
      LocationEntity? location,
      String? provider,
      DateTime? createdAt,
      bool? autoGeneratedUsername,
      int? usernameChangeCounter,
      List<ChannelEntity>? channels,
      String? deviceType,
      String? deviceId,
      String? providerId,
      List<PostEntity>? posts,
      List<StoryEntity>? storys,
      List<CommentEntity>? comments,
      List<ReportEntity>? reports,
      List<ReportEntity>? reporteds});
  UserEntityCopyWith<$R2, $In, $Out2> $chain<$R2, $Out2>(Then<$Out2, $R2> t);
}

class _UserEntityCopyWithImpl<$R, $Out>
    extends ClassCopyWithBase<$R, UserEntity, $Out>
    implements UserEntityCopyWith<$R, UserEntity, $Out> {
  _UserEntityCopyWithImpl(super.value, super.then, super.then2);

  @override
  late final ClassMapperBase<UserEntity> $mapper =
      UserEntityMapper.ensureInitialized();
  @override
  LocationEntityCopyWith<$R, LocationEntity, LocationEntity>? get location =>
      $value.location?.copyWith.$chain((v) => call(location: v));
  @override
  ListCopyWith<$R, ChannelEntity,
          ChannelEntityCopyWith<$R, ChannelEntity, ChannelEntity>>?
      get channels => $value.channels != null
          ? ListCopyWith($value.channels!, (v, t) => v.copyWith.$chain(t),
              (v) => call(channels: v))
          : null;
  @override
  ListCopyWith<$R, PostEntity, PostEntityCopyWith<$R, PostEntity, PostEntity>>?
      get posts => $value.posts != null
          ? ListCopyWith($value.posts!, (v, t) => v.copyWith.$chain(t),
              (v) => call(posts: v))
          : null;
  @override
  ListCopyWith<$R, StoryEntity,
          StoryEntityCopyWith<$R, StoryEntity, StoryEntity>>?
      get storys => $value.storys != null
          ? ListCopyWith($value.storys!, (v, t) => v.copyWith.$chain(t),
              (v) => call(storys: v))
          : null;
  @override
  ListCopyWith<$R, CommentEntity,
          CommentEntityCopyWith<$R, CommentEntity, CommentEntity>>?
      get comments => $value.comments != null
          ? ListCopyWith($value.comments!, (v, t) => v.copyWith.$chain(t),
              (v) => call(comments: v))
          : null;
  @override
  ListCopyWith<$R, ReportEntity,
          ReportEntityCopyWith<$R, ReportEntity, ReportEntity>>?
      get reports => $value.reports != null
          ? ListCopyWith($value.reports!, (v, t) => v.copyWith.$chain(t),
              (v) => call(reports: v))
          : null;
  @override
  ListCopyWith<$R, ReportEntity,
          ReportEntityCopyWith<$R, ReportEntity, ReportEntity>>?
      get reporteds => $value.reporteds != null
          ? ListCopyWith($value.reporteds!, (v, t) => v.copyWith.$chain(t),
              (v) => call(reporteds: v))
          : null;
  @override
  $R call(
          {String? id,
          Object? username = $none,
          Object? email = $none,
          Object? isBanned = $none,
          Object? isDeleted = $none,
          UserType? userType,
          Object? official = $none,
          Object? distance = $none,
          Object? points = $none,
          Object? location = $none,
          Object? provider = $none,
          Object? createdAt = $none,
          Object? autoGeneratedUsername = $none,
          Object? usernameChangeCounter = $none,
          Object? channels = $none,
          Object? deviceType = $none,
          Object? deviceId = $none,
          Object? providerId = $none,
          Object? posts = $none,
          Object? storys = $none,
          Object? comments = $none,
          Object? reports = $none,
          Object? reporteds = $none}) =>
      $apply(FieldCopyWithData({
        if (id != null) #id: id,
        if (username != $none) #username: username,
        if (email != $none) #email: email,
        if (isBanned != $none) #isBanned: isBanned,
        if (isDeleted != $none) #isDeleted: isDeleted,
        if (userType != null) #userType: userType,
        if (official != $none) #official: official,
        if (distance != $none) #distance: distance,
        if (points != $none) #points: points,
        if (location != $none) #location: location,
        if (provider != $none) #provider: provider,
        if (createdAt != $none) #createdAt: createdAt,
        if (autoGeneratedUsername != $none)
          #autoGeneratedUsername: autoGeneratedUsername,
        if (usernameChangeCounter != $none)
          #usernameChangeCounter: usernameChangeCounter,
        if (channels != $none) #channels: channels,
        if (deviceType != $none) #deviceType: deviceType,
        if (deviceId != $none) #deviceId: deviceId,
        if (providerId != $none) #providerId: providerId,
        if (posts != $none) #posts: posts,
        if (storys != $none) #storys: storys,
        if (comments != $none) #comments: comments,
        if (reports != $none) #reports: reports,
        if (reporteds != $none) #reporteds: reporteds
      }));
  @override
  UserEntity $make(CopyWithData data) => UserEntity(
      id: data.get(#id, or: $value.id),
      username: data.get(#username, or: $value.username),
      email: data.get(#email, or: $value.email),
      isBanned: data.get(#isBanned, or: $value.isBanned),
      isDeleted: data.get(#isDeleted, or: $value.isDeleted),
      userType: data.get(#userType, or: $value.userType),
      official: data.get(#official, or: $value.official),
      distance: data.get(#distance, or: $value.distance),
      points: data.get(#points, or: $value.points),
      location: data.get(#location, or: $value.location),
      provider: data.get(#provider, or: $value.provider),
      createdAt: data.get(#createdAt, or: $value.createdAt),
      autoGeneratedUsername:
          data.get(#autoGeneratedUsername, or: $value.autoGeneratedUsername),
      usernameChangeCounter:
          data.get(#usernameChangeCounter, or: $value.usernameChangeCounter),
      channels: data.get(#channels, or: $value.channels),
      deviceType: data.get(#deviceType, or: $value.deviceType),
      deviceId: data.get(#deviceId, or: $value.deviceId),
      providerId: data.get(#providerId, or: $value.providerId),
      posts: data.get(#posts, or: $value.posts),
      storys: data.get(#storys, or: $value.storys),
      comments: data.get(#comments, or: $value.comments),
      reports: data.get(#reports, or: $value.reports),
      reporteds: data.get(#reporteds, or: $value.reporteds));

  @override
  UserEntityCopyWith<$R2, UserEntity, $Out2> $chain<$R2, $Out2>(
          Then<$Out2, $R2> t) =>
      _UserEntityCopyWithImpl($value, $cast, t);
}
